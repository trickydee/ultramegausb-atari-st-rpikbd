Applying patches for build compatibility...
Applying pioasm CMake fix...
patching file 'tools/pioasm/CMakeLists.txt'
1 out of 1 hunks failed--saving rejects to 'tools/pioasm/CMakeLists.txt.rej'
Pioasm CMake fix applied successfully
All patches applied successfully!
PICO_SDK_PATH is /Users/rich/Documents/Code/Pico/Atari-Keyboard/7oct-test-2/atari-st-rpikb/pico-sdk
Target board (PICO_BOARD) is 'pico2'.
Using board configuration from /Users/rich/Documents/Code/Pico/Atari-Keyboard/7oct-test-2/atari-st-rpikb/pico-sdk/src/boards/include/boards/pico2.h
Auto-converting non-specific PICO_PLATFORM='rp2350' to 'rp2350-arm-s'
Defaulting platform (PICO_PLATFORM) to 'rp2350-arm-s' based on PICO_BOARD setting.
-- Defaulting build type to 'Release' since not specified.
Defaulting compiler (PICO_COMPILER) to 'pico_arm_cortex_m33_gcc' since not specified.
Configuring toolchain based on PICO_COMPILER 'pico_arm_cortex_m33_gcc'
-- Building for board: pico2
Defaulting PICO_GCC_TRIPLE to 'arm-none-eabi'
-- The C compiler identification is GNU 10.3.1
-- The CXX compiler identification is GNU 10.3.1
-- The ASM compiler identification is GNU
-- Found assembler: /opt/homebrew/bin/arm-none-eabi-gcc
-- Detecting C compiler ABI info
-- Detecting C compiler ABI info - done
-- Check for working C compiler: /opt/homebrew/bin/arm-none-eabi-gcc - skipped
-- Detecting C compile features
-- Detecting C compile features - done
-- Detecting CXX compiler ABI info
-- Detecting CXX compiler ABI info - done
-- Check for working CXX compiler: /opt/homebrew/bin/arm-none-eabi-g++ - skipped
-- Detecting CXX compile features
-- Detecting CXX compile features - done
Build type is Release
CMake Warning at pico-sdk/tools/Findpicotool.cmake:30 (message):
  No installed picotool with version 2.1.1 found - building from source

  It is recommended to build and install picotool separately, or to set
  PICOTOOL_FETCH_FROM_GIT_PATH to a common directory for all your SDK
  projects
Call Stack (most recent call first):
  pico-sdk/tools/CMakeLists.txt:168 (find_package)
  pico-sdk/src/cmake/on_device.cmake:54 (pico_init_picotool)
  pico-sdk/src/rp2350/boot_stage2/CMakeLists.txt:63 (pico_add_dis_output)
  pico-sdk/src/rp2350/boot_stage2/CMakeLists.txt:104 (pico_define_boot_stage2)


Downloading Picotool
Using picotool from /Users/rich/Documents/Code/Pico/Atari-Keyboard/7oct-test-2/atari-st-rpikb/build-pico2/_deps/picotool/picotool
-- Found Python3: /opt/homebrew/Frameworks/Python.framework/Versions/3.13/bin/python3.13 (found version "3.13.3") found components: Interpreter
TinyUSB available at /Users/rich/Documents/Code/Pico/Atari-Keyboard/7oct-test-2/atari-st-rpikb/pico-sdk/lib/tinyusb/hw/bsp/rp2040; enabling build support for USB.
BTstack available at /Users/rich/Documents/Code/Pico/Atari-Keyboard/7oct-test-2/atari-st-rpikb/pico-sdk/lib/btstack
cyw43-driver available at /Users/rich/Documents/Code/Pico/Atari-Keyboard/7oct-test-2/atari-st-rpikb/pico-sdk/lib/cyw43-driver
mbedtls available at /Users/rich/Documents/Code/Pico/Atari-Keyboard/7oct-test-2/atari-st-rpikb/pico-sdk/lib/mbedtls
lwIP available at /Users/rich/Documents/Code/Pico/Atari-Keyboard/7oct-test-2/atari-st-rpikb/pico-sdk/lib/lwip
-- Target: Raspberry Pi Pico 2 (RP2350)
-- Debug mode: DISABLED (production)
-- Output files will be named: atari_ikbd_pico2.*
-- Configuring done (2.5s)
-- Generating done (0.1s)
-- Build files have been written to: /Users/rich/Documents/Code/Pico/Atari-Keyboard/7oct-test-2/atari-st-rpikb/build-pico2
